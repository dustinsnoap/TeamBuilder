{"ast":null,"code":"import axios from 'axios';\nconst api = 'https://idontknow.com';\nexport const GET_USER = 'GET_USER';\nexport const GET_USERS = 'GET_USERS';\nexport const ADD_USER = 'ADD_USER';\nexport const REMOVE_USER = 'REMOVE_USER';\nexport const EDIT_USER = 'EDIT_USER';\nexport const USER_SUCCESS = 'USER_SUCCESS';\nexport const USER_FAIL = 'USER_FAIL';\nexport const get_user = id => dispatch => {\n  dispatch({\n    type: GET_USER\n  });\n  return axios.get(\"\".concat(api, \"/\").concat(id)).then(res => dispatch({\n    type: USER_SUCCESS,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: USER_FAIL,\n    payload: err\n  }));\n};","map":{"version":3,"sources":["/home/fury/Code/Side/TeamBuilder/src/actions/users.js"],"names":["axios","api","GET_USER","GET_USERS","ADD_USER","REMOVE_USER","EDIT_USER","USER_SUCCESS","USER_FAIL","get_user","id","dispatch","type","get","then","res","payload","data","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,uBAAZ;AAEA,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AAEP,OAAO,MAAMC,QAAQ,GAAGC,EAAE,IAAIC,QAAQ,IAAI;AACtCA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEV;AAAP,GAAD,CAAR;AACA,SAAOF,KAAK,CACPa,GADE,WACKZ,GADL,cACYS,EADZ,GAEFI,IAFE,CAEGC,GAAG,IAAIJ,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEL,YAAP;AAAqBS,IAAAA,OAAO,EAAED,GAAG,CAACE;AAAlC,GAAD,CAFlB,EAGFC,KAHE,CAGIC,GAAG,IAAIR,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEJ,SAAP;AAAkBQ,IAAAA,OAAO,EAAEG;AAA3B,GAAD,CAHnB,CAAP;AAIH,CANM","sourcesContent":["import axios from 'axios'\n\nconst api = 'https://idontknow.com'\n\nexport const GET_USER = 'GET_USER'\nexport const GET_USERS = 'GET_USERS'\nexport const ADD_USER = 'ADD_USER'\nexport const REMOVE_USER = 'REMOVE_USER'\nexport const EDIT_USER = 'EDIT_USER'\nexport const USER_SUCCESS = 'USER_SUCCESS'\nexport const USER_FAIL = 'USER_FAIL'\n\nexport const get_user = id => dispatch => {\n    dispatch({type: GET_USER})\n    return axios\n        .get(`${api}/${id}`)\n        .then(res => dispatch({type: USER_SUCCESS, payload: res.data}))\n        .catch(err => dispatch({type: USER_FAIL, payload: err}))\n}"]},"metadata":{},"sourceType":"module"}